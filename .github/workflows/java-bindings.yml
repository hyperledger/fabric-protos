name: Java Bindings

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  ci_checks:
    name: Build checks
    uses: ./.github/workflows/ci-checks.yml

  build:
    name: Build Java bindings
    needs: ci_checks
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache build dependencies
      uses: actions/cache@v3
      env:
        cache-name: makefile-deps
      with:
        path: ~/.cache/fabric-protos
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Makefile') }}
          ${{ runner.os }}-${{ env.cache-name }}-

    - name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        cache: 'maven'

    - name: Run make
      run: make javabindings

    - name: Set prerelease version
      run: mvn --batch-mode versions:set -DnewVersion=${BINDING_VERSION}-dev-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
      if: github.event_name != 'release'
      working-directory: bindings/java
      env:
        BINDING_VERSION: ${{ needs.ci_checks.outputs.binding_version }}
        GITHUB_RUN_ID: ${{ github.run_id }}
        GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}

    - name: Set release version
      run: mvn --batch-mode versions:set -DnewVersion=${BINDING_VERSION}
      if: github.event_name == 'release'
      working-directory: bindings/java
      env:
        BINDING_VERSION: ${{ needs.ci_checks.outputs.binding_version }}

    - name: Publish to GitHub Packages
      run: mvn -P github --batch-mode deploy
      if: github.event_name != 'pull_request'
      working-directory: bindings/java
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
