name: Makefile CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BINDING_VERSION: 0.1.0

jobs:
  check-version:
    name: Check versions
    runs-on: ubuntu-latest
    outputs:
      binding-version: ${{ env.BINDING_VERSION }}

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: Check package.json version
      working-directory: bindings/node
      run: |
        NODE_MODULE_VERSION=$(jq --raw-output .version package.json)
        echo "Expected version: ${BINDING_VERSION}"
        echo "package.json version: ${NODE_MODULE_VERSION}"
        [ "${NODE_MODULE_VERSION}" = "${BINDING_VERSION}" ] || exit 1

    - name: Check pom.xml version
      working-directory: bindings/java
      run: |
        POM_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Expected version: ${BINDING_VERSION}"
        echo "pom.xml version: ${POM_VERSION}"
        [ "${POM_VERSION%-SNAPSHOT}" = "${BINDING_VERSION}" ] || exit 1

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache build dependencies
      uses: actions/cache@v3
      env:
        cache-name: makefile-deps
      with:
        path: ~/.cache/fabric-protos
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Makefile') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('Makefile') }}
          ${{ runner.os }}-${{ env.cache-name }}-

    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        cache: 'maven'

    - uses: actions/setup-node@v3
      with:
        node-version: 14
        cache: 'npm'
        cache-dependency-path: bindings/node/package-lock.json

    - name: Run build
      run: make

  publish-node-binding:
    if: github.event_name != 'pull_request'
    name: Publish Node.js binding
    needs: [ build, check-version ]
    uses: ./.github/workflows/publish-node.yml
    with:
      registry: https://registry.npmjs.org/
      version: ${{needs.check-version.outputs.binding-version}}
    secrets:
      token: ${{ secrets.NPM_TOKEN }}
